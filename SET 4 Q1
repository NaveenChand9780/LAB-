#include <stdio.h>

// Function to calculate the sum of digits of a number
int sumOfDigits(int num) {
    int sum = 0;
    while (num > 0) {
        sum += num % 10;
        num /= 10;
    }
    return sum;
}

// Function to find the maximum value of nums[i] + nums[j]
int findMaxSumOfDigits(int nums[], int n) {
    int maxSum = -1;

    // Loop through all pairs of indices i and j
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            // Calculate the sum of digits for nums[i] and nums[j]
            int sumI = sumOfDigits(nums[i]);
            int sumJ = sumOfDigits(nums[j]);

            // Check if the sums are equal
            if (sumI == sumJ) {
                // Calculate the current sum of nums[i] + nums[j]
                int currentSum = nums[i] + nums[j];

                // Update the maximum sum if the current sum is greater
                if (currentSum > maxSum) {
                    maxSum = currentSum;
                }
            }
        }
    }

    return maxSum;
}

int main() {
    int nums[] = {123, 456, 789, 45, 67, 89};
    int n = sizeof(nums) / sizeof(nums[0]);

    int result = findMaxSumOfDigits(nums, n);
    printf("Maximum sum of digits: %d\n", result);

    return 0;
}
