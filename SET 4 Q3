#include <stdio.h>

#define INF 999999 // Infinity value for unreachable nodes

// Function to find all pairs shortest path using Floyd's technique
void floydsAlgorithm(int graph[4][4], int n) {
    int dist[n][n];

    // Initialize the distance matrix with the graph values
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            dist[i][j] = graph[i][j];
        }
    }

    // Perform Floyd's algorithm
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (dist[i][k] + dist[k][j] < dist[i][j]) {
                    dist[i][j] = dist[i][k] + dist[k][j];
                }
            }
        }
    }

    // Print the shortest distances between all pairs of vertices
    printf("All Pairs Shortest Paths:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (dist[i][j] == INF) {
                printf("INF\t");
            } else {
                printf("%d\t", dist[i][j]);
            }
        }
        printf("\n");
    }
}

int main() {
    int graph[4][4] = {
        {0, 8, 7, 8},
        {9, 0, 11, 12},
        {10, 9, 0, 11},
        {8, 10, 11, 0}
    };
    int n = 4; // Number of vertices in the graph

    floydsAlgorithm(graph, n);

    return 0;
}
