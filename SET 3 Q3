#include <stdio.h>
#include <limits.h>

typedef struct {
    int min;
    int max;
} MinMax;

MinMax findMinMax(int arr[], int start, int end) {
    MinMax result, left, right;
    int mid;

    // Base case: If only one element in the subarray
    if (start == end) {
        result.min = result.max = arr[start];
        return result;
    }

    // If there are two elements in the subarray
    if (start == end - 1) {
        result.min = (arr[start] < arr[end]) ? arr[start] : arr[end];
        result.max = (arr[start] > arr[end]) ? arr[start] : arr[end];
        return result;
    }

    // Divide the array into two halves and find min/max in each half
    mid = (start + end) / 2;
    left = findMinMax(arr, start, mid);
    right = findMinMax(arr, mid + 1, end);

    // Merge the results
    result.min = (left.min < right.min) ? left.min : right.min;
    result.max = (left.max > right.max) ? left.max : right.max;

    return result;
}

int main() {
    int arr1[] = {23, 45, 6, 8, -9, 44, 7, 8};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);

    MinMax result1 = findMinMax(arr1, 0, size1 - 1);
    printf("Min Value: %d, Max Value: %d\n", result1.min, result1.max);

    int arr2[] = {8, -5, 7, 2, 6, 0, 1, 9};
    int size2 = sizeof(arr2) / sizeof(arr2[0]);

    MinMax result2 = findMinMax(arr2, 0, size2 - 1);
    printf("Min Value: %d, Max Value: %d\n", result2.min, result2.max);

    int arr3[] = {45, 9, 8, 4, 7, 11, 22, 16};
    int size3 = sizeof(arr3) / sizeof(arr3[0]);

    MinMax result3 = findMinMax(arr3, 0, size3 - 1);
    printf("Min Value: %d, Max Value: %d\n", result3.min, result3.max);

    return 0;
}
